
services:
  web:
    build: .
    ports:
      - "8083:8083"
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/music
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password123
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SERVER_PORT: 8083
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: music
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    networks:
      - app-network
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
    postgres_data:

networks:
  app-network:
    driver: bridge